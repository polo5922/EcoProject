<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \App\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\User' . "\0" . 'id', '' . "\0" . 'App\\Entity\\User' . "\0" . 'user_name', '' . "\0" . 'App\\Entity\\User' . "\0" . 'user_password', '' . "\0" . 'App\\Entity\\User' . "\0" . 'user_email', '' . "\0" . 'App\\Entity\\User' . "\0" . 'user_ip', '' . "\0" . 'App\\Entity\\User' . "\0" . 'user_created_at', '' . "\0" . 'App\\Entity\\User' . "\0" . 'user_clics', '' . "\0" . 'App\\Entity\\User' . "\0" . 'role', '' . "\0" . 'App\\Entity\\User' . "\0" . 'associations', '' . "\0" . 'App\\Entity\\User' . "\0" . 'isVerified', '' . "\0" . 'App\\Entity\\User' . "\0" . 'associationsGerees'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\User' . "\0" . 'id', '' . "\0" . 'App\\Entity\\User' . "\0" . 'user_name', '' . "\0" . 'App\\Entity\\User' . "\0" . 'user_password', '' . "\0" . 'App\\Entity\\User' . "\0" . 'user_email', '' . "\0" . 'App\\Entity\\User' . "\0" . 'user_ip', '' . "\0" . 'App\\Entity\\User' . "\0" . 'user_created_at', '' . "\0" . 'App\\Entity\\User' . "\0" . 'user_clics', '' . "\0" . 'App\\Entity\\User' . "\0" . 'role', '' . "\0" . 'App\\Entity\\User' . "\0" . 'associations', '' . "\0" . 'App\\Entity\\User' . "\0" . 'isVerified', '' . "\0" . 'App\\Entity\\User' . "\0" . 'associationsGerees'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getUserName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserName', []);

        return parent::getUserName();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserName(string $user_name): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserName', [$user_name]);

        return parent::setUserName($user_name);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserPassword(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserPassword', []);

        return parent::getUserPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserPassword(string $user_password): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserPassword', [$user_password]);

        return parent::setUserPassword($user_password);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserEmail(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserEmail', []);

        return parent::getUserEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserEmail(string $user_email): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserEmail', [$user_email]);

        return parent::setUserEmail($user_email);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserIp(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserIp', []);

        return parent::getUserIp();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserIp(?string $user_ip): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserIp', [$user_ip]);

        return parent::setUserIp($user_ip);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserCreatedAt(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserCreatedAt', []);

        return parent::getUserCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserCreatedAt(\DateTimeInterface $user_created_at): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserCreatedAt', [$user_created_at]);

        return parent::setUserCreatedAt($user_created_at);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserClics(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserClics', []);

        return parent::getUserClics();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserClics(int $user_clics): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserClics', [$user_clics]);

        return parent::setUserClics($user_clics);
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles(): ?array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', []);

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function setRoles(?string $role): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRoles', [$role]);

        return parent::setRoles($role);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserame(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserame', []);

        return parent::getUserame();
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', []);

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function getSalt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalt', []);

        return parent::getSalt();
    }

    /**
     * {@inheritDoc}
     */
    public function eraseCredentials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'eraseCredentials', []);

        return parent::eraseCredentials();
    }

    /**
     * {@inheritDoc}
     */
    public function getAssociations(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAssociations', []);

        return parent::getAssociations();
    }

    /**
     * {@inheritDoc}
     */
    public function addAssociation(\App\Entity\Association $association): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAssociation', [$association]);

        return parent::addAssociation($association);
    }

    /**
     * {@inheritDoc}
     */
    public function addAssociations(array $associations)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAssociations', [$associations]);

        return parent::addAssociations($associations);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAssociation(\App\Entity\Association $association): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAssociation', [$association]);

        return parent::removeAssociation($association);
    }

    /**
     * {@inheritDoc}
     */
    public function getRole(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRole', []);

        return parent::getRole();
    }

    /**
     * {@inheritDoc}
     */
    public function setRole(?string $role): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRole', [$role]);

        return parent::setRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function isVerified(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isVerified', []);

        return parent::isVerified();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsVerified(bool $isVerified): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsVerified', [$isVerified]);

        return parent::setIsVerified($isVerified);
    }

    /**
     * {@inheritDoc}
     */
    public function getAssociationsGerees(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAssociationsGerees', []);

        return parent::getAssociationsGerees();
    }

    /**
     * {@inheritDoc}
     */
    public function addAssociationsGeree(\App\Entity\Association $associationsGeree): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAssociationsGeree', [$associationsGeree]);

        return parent::addAssociationsGeree($associationsGeree);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAssociationsGeree(\App\Entity\Association $associationsGeree): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAssociationsGeree', [$associationsGeree]);

        return parent::removeAssociationsGeree($associationsGeree);
    }

}
